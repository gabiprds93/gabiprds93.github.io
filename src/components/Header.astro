---
import { navItems } from "@/constants"
---

<header
  class="fixed left-0 right-0 z-10 mx-auto flex justify-center bg-black/80"
>
  <nav>
    <ul class="flex gap-0 px-2 text-white sm:gap-10">
      {
        navItems.map((link) => (
          <li>
            <a
              class="block p-3 text-center transition hover:text-red-400"
              aria-label={link.label}
              href={link.url}
            >
              {link.title}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
</header>

<script>
  const sectionElements = document.querySelectorAll("section")
  const linkElements = document.querySelectorAll("header nav ul li a")
  const callback = (entries: IntersectionObserverEntry[]) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        linkElements.forEach((item) => {
          if (item.getAttribute("aria-label") === entry.target.id) {
            item.classList.add("text-red-400")
          } else {
            item.classList.remove("text-red-400")
          }
        })
      }
    })
  }
  const observer = new IntersectionObserver(callback, { threshold: 0.4 })

  sectionElements.forEach((section) => {
    observer.observe(section)
  })

  // Cleanup function
  document.onvisibilitychange = () => {
    if (document.visibilityState === "hidden") {
      observer.disconnect()
    } else {
      sectionElements.forEach((section) => {
        observer.observe(section)
      })
    }
  }
</script>
